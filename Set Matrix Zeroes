//#include <iostream>
//#include <vector>
//using namespace std;
class Solution
{
public:
    void setZeroes(vector<vector<int>>& matrix) 
    {
        int m=matrix.size();
        int n=matrix[0].size();
        bool firstRowZero = false, firstColZero = false;
        for(int j=0;j<n;j++)
        {
            if(matrix[0][j]==0)
            {
                firstRowZero = true;
                break;
            }
        }
        for(int i=0;i<m ;i++)
        {
            if(matrix[i][0]==0)
            {
                firstColZero = true;
                break;
            }
        }
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                if(matrix[i][j]==0)
                {
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                if(matrix[i][0]==0|| matrix[0][j]==0)
                {
                    matrix[i][j]=0;
                }
            }
        }
        if(firstRowZero)
        {
            for(int j=0;j<n;j++)
            {
                matrix[0][j]=0;
            }
        }
        if(firstColZero)
        {
            for(int i=0;i<m;i++)
            {
                matrix[i][0]=0;
            }
        }
    }
    int main()
    {
        vector<vector<int>> matrix1 = {
            {1,1,1},
            {1,0,1},
            {1,1,1}
        };
        setZeroes(matrix1);
        cout<<"Output Matrix1:"<<endl;
        for(const auto& row : matrix1)
        {
            for(int val : row)
            {
                cout<<val<<" ";
            }
            cout<<endl;
        }
        vector<vector<int>> matrix2 = {
            {0,1,2,0},
            {3,4,5,2},
            {1,3,1,5}
        };
        setZeroes(matrix2);
        cout<<"Output Matrix 2:"<<endl;
         for(const auto& row : matrix2)
        {
            for(int val : row)
            {
                cout<<val<<" ";
            }
            cout<<endl;
        }
        return 0;
    }
};
